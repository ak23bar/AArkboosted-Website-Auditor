version: '3.8'

services:
  backend:
    build:
      context: ..
      dockerfile: deployment/Dockerfile.backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=sqlite:///./arkboosted_audits.db
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here-change-in-production}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ENVIRONMENT=production
    volumes:
      - backend_data:/app/reports
      - backend_db:/app
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - arkboosted_network

  frontend:
    build:
      context: ..
      dockerfile: deployment/Dockerfile.frontend
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - arkboosted_network

  # Optional: PostgreSQL for production use
  # postgres:
  #   image: postgres:15-alpine
  #   environment:
  #     POSTGRES_DB: arkboosted_audits
  #     POSTGRES_USER: arkboosted
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   restart: unless-stopped
  #   networks:
  #     - arkboosted_network

volumes:
  backend_data:
    driver: local
  backend_db:
    driver: local
  # postgres_data:
  #   driver: local

networks:
  arkboosted_network:
    driver: bridge